//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace InventoryGUI.WcfServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Product", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    public partial class Product : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private InventoryGUI.WcfServiceReference.Copy[] CopiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProductNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SupplyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public InventoryGUI.WcfServiceReference.Copy[] Copies {
            get {
                return this.CopiesField;
            }
            set {
                if ((object.ReferenceEquals(this.CopiesField, value) != true)) {
                    this.CopiesField = value;
                    this.RaisePropertyChanged("Copies");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductNo {
            get {
                return this.ProductNoField;
            }
            set {
                if ((this.ProductNoField.Equals(value) != true)) {
                    this.ProductNoField = value;
                    this.RaisePropertyChanged("ProductNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Supply {
            get {
                return this.SupplyField;
            }
            set {
                if ((this.SupplyField.Equals(value) != true)) {
                    this.SupplyField = value;
                    this.RaisePropertyChanged("Supply");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Copy", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    public partial class Copy : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SerialNoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SerialNo {
            get {
                return this.SerialNoField;
            }
            set {
                if ((this.SerialNoField.Equals(value) != true)) {
                    this.SerialNoField = value;
                    this.RaisePropertyChanged("SerialNo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WcfServiceReference.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateItem", ReplyAction="http://tempuri.org/IService1/CreateItemResponse")]
        void CreateItem();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateItem", ReplyAction="http://tempuri.org/IService1/CreateItemResponse")]
        System.Threading.Tasks.Task CreateItemAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateStock", ReplyAction="http://tempuri.org/IService1/UpdateStockResponse")]
        void UpdateStock(InventoryGUI.WcfServiceReference.Product p, int newSupply);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateStock", ReplyAction="http://tempuri.org/IService1/UpdateStockResponse")]
        System.Threading.Tasks.Task UpdateStockAsync(InventoryGUI.WcfServiceReference.Product p, int newSupply);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdatePrice", ReplyAction="http://tempuri.org/IService1/UpdatePriceResponse")]
        void UpdatePrice(InventoryGUI.WcfServiceReference.Product p, double price);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdatePrice", ReplyAction="http://tempuri.org/IService1/UpdatePriceResponse")]
        System.Threading.Tasks.Task UpdatePriceAsync(InventoryGUI.WcfServiceReference.Product p, double price);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllSoldoutProducts", ReplyAction="http://tempuri.org/IService1/GetAllSoldoutProductsResponse")]
        InventoryGUI.WcfServiceReference.Product[] GetAllSoldoutProducts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllSoldoutProducts", ReplyAction="http://tempuri.org/IService1/GetAllSoldoutProductsResponse")]
        System.Threading.Tasks.Task<InventoryGUI.WcfServiceReference.Product[]> GetAllSoldoutProductsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/FindProductByName", ReplyAction="http://tempuri.org/IService1/FindProductByNameResponse")]
        InventoryGUI.WcfServiceReference.Product[] FindProductByName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/FindProductByName", ReplyAction="http://tempuri.org/IService1/FindProductByNameResponse")]
        System.Threading.Tasks.Task<InventoryGUI.WcfServiceReference.Product[]> FindProductByNameAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/FindProductByProductNo", ReplyAction="http://tempuri.org/IService1/FindProductByProductNoResponse")]
        InventoryGUI.WcfServiceReference.Product[] FindProductByProductNo(int productNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/FindProductByProductNo", ReplyAction="http://tempuri.org/IService1/FindProductByProductNoResponse")]
        System.Threading.Tasks.Task<InventoryGUI.WcfServiceReference.Product[]> FindProductByProductNoAsync(int productNo);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : InventoryGUI.WcfServiceReference.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<InventoryGUI.WcfServiceReference.IService1>, InventoryGUI.WcfServiceReference.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void CreateItem() {
            base.Channel.CreateItem();
        }
        
        public System.Threading.Tasks.Task CreateItemAsync() {
            return base.Channel.CreateItemAsync();
        }
        
        public void UpdateStock(InventoryGUI.WcfServiceReference.Product p, int newSupply) {
            base.Channel.UpdateStock(p, newSupply);
        }
        
        public System.Threading.Tasks.Task UpdateStockAsync(InventoryGUI.WcfServiceReference.Product p, int newSupply) {
            return base.Channel.UpdateStockAsync(p, newSupply);
        }
        
        public void UpdatePrice(InventoryGUI.WcfServiceReference.Product p, double price) {
            base.Channel.UpdatePrice(p, price);
        }
        
        public System.Threading.Tasks.Task UpdatePriceAsync(InventoryGUI.WcfServiceReference.Product p, double price) {
            return base.Channel.UpdatePriceAsync(p, price);
        }
        
        public InventoryGUI.WcfServiceReference.Product[] GetAllSoldoutProducts() {
            return base.Channel.GetAllSoldoutProducts();
        }
        
        public System.Threading.Tasks.Task<InventoryGUI.WcfServiceReference.Product[]> GetAllSoldoutProductsAsync() {
            return base.Channel.GetAllSoldoutProductsAsync();
        }
        
        public InventoryGUI.WcfServiceReference.Product[] FindProductByName(string name) {
            return base.Channel.FindProductByName(name);
        }
        
        public System.Threading.Tasks.Task<InventoryGUI.WcfServiceReference.Product[]> FindProductByNameAsync(string name) {
            return base.Channel.FindProductByNameAsync(name);
        }
        
        public InventoryGUI.WcfServiceReference.Product[] FindProductByProductNo(int productNo) {
            return base.Channel.FindProductByProductNo(productNo);
        }
        
        public System.Threading.Tasks.Task<InventoryGUI.WcfServiceReference.Product[]> FindProductByProductNoAsync(int productNo) {
            return base.Channel.FindProductByProductNoAsync(productNo);
        }
    }
}
